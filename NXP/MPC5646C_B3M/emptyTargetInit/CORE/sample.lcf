/* lcf file for MPC5554 */

MEMORY
{
    resetvector:        org = 0x00000000,   len = 0x00000008
    init:               org = 0x00000020,   len = 0x00000FE0
    exception_handlers: org = 0x00001000,   len = 0x00001000
    internal_flash:     org = 0x00002000,   len = 0x00020000
    data_flash:         org = 0x00800000,   len = 0x00010000
    internal_ram:       org = 0x40000000,   len = 0x00004000
    stack :             org = 0x40004000,   len = 0x1000 /* Start location for Stack */
    heap  :             org = 0x40005000,   len = 0x1000 /* Heap start location */
}

__RAM_START_ADDR = ADDR(internal_ram);
__RAM_END_ADDR = ADDR(stack) + SIZEOF(stack);
__RAM_SIZE = __RAM_END_ADDR - __RAM_START_ADDR;

FORCEACTIVE { "bam_rchw", "bam_resetvector" }
		
SECTIONS
{
    .__bam_bootarea LOAD (0x00000000): {} > resetvector

    .init  LOAD (0x00000020): {} > init
    .init_vle (VLECODE) LOAD (ADDR(.init)+SIZEOF(.init)): {
        *(.init)
        *(.init_vle)
     } > init

    
    
    GROUP  : {
      .ivor_branch_table    (VLECODE) LOAD (ADDR(exception_handlers))   : {}
      .intc_hw_branch_table  (VLECODE) LOAD (_e_ivor_branch_table) ALIGN (0x800) : {}
      .ivor_handlers     (VLECODE) LOAD (_e_intc_hw_branch_table) : {}
    } > exception_handlers

    GROUP  : {
      .text : {} 
      .text_vle (VLECODE) ALIGN(0x08): {
         *(.text)
         *(.text_vle)
       }
       .rodata (CONST) : {
         *(.rdata)
         *(.rodata)
       }
       .ctors : {}
       .dtors : {}
       extab : {}
       extabindex : {}
    } > internal_flash
    
    GROUP : {
       .__uninitialized_intc_handlertable ALIGN(0x10) : {}
       .data   : {}
       .sdata  : {}
       .sbss   : {}
       .sdata2 : {}
       .sbss2  : {}
       .bss    : {}
    } > internal_ram
}

/* Metrowerks CodeWarrior compiler address designations */

_stack_addr = ADDR(stack)+SIZEOF(stack);
_stack_end  = ADDR(stack);
__ROM_SDATA_SIZE    = SIZEOF(.sdata);
__ROM_SDATA_ADDR    = ROMADDR(.sdata);
__RAM_SDATA_ADDR    = ADDR(.sdata);

__IVPR_VALUE = ADDR(exception_handlers);

/* Exceptions Handlers Location (used in z650Exceptions.c for IVPR initialization) */

//EXCEPTION_HANDLERS = ADDR(exception_handlers);
