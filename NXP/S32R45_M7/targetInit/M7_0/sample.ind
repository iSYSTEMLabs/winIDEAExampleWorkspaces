INPUT(& &)
ENTRY(Reset)

MEMORY
{
  VECT (rwx)        : ORIGIN = 0x34000000, LENGTH = 1k  
	PROGRAM_RAM (rwx) : ORIGIN = 0x34000400, LENGTH = 255K
  RAM (rwx)         : ORIGIN = 0x34040000, LENGTH = 64K
  RAM_0_0_TCMA (rwx): ORIGIN = 0x20000000, LENGTH = 32K /* Cluster0_C0_TCM_A   */
}

_estackC0 = (ORIGIN(RAM) + LENGTH(RAM) - 0x1000 - 8) & 0xFFFFFFF8;
_VTOR   =  ORIGIN(VECT);      /* Must be aligned to 64 bits */

SECTIONS
{
    .vect :
    {
      KEEP(*(.isr_vector))
    } > VECT
    
    .Cluster0_Core0_TCMA  (NOLOAD):
    {
        
    } > RAM_0_0_TCMA
    
    .text :
    {
        . = ALIGN(4);
        *(.text*)
        *(.glue_7t) *(.glue_7)
        *(.rodata*)
        *(.eh*)
        _etext = .;
    } > PROGRAM_RAM

    .data : 
    {
        . = ALIGN(4);
        _data = .;
        *(vtable)
        *(.data*)
        _edata = .;
    } > RAM AT> PROGRAM_RAM


    .bss : AT (ADDR(.data) + SIZEOF(.data))
    {
      _bss = .;
      *(.bss*)
      *(COMMON)
      _ebss = .;
    } > RAM
}


