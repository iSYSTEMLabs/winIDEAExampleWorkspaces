
ENTRY(ResetISR)                     
INPUT(& &)


MEMORY
{
    /* avoid 0x2FC - 0x2FF area since those are protection related locations */
    VECT (rwx) : ORIGIN = 0x00000000, LENGTH = 0x400
    FLASH (rx) : ORIGIN = 0x00000400, LENGTH = 31K        /* As 0x2FC is Code Read Protection */
    SRAM (rwx) : ORIGIN = 0x10000000, LENGTH = 8K        /* reduce size since IAP command use 32 bytes at top of SRAM */  
}

_stack_top = (ORIGIN(SRAM) + LENGTH(SRAM) - 4) & 0xFFFFFFF0;

SECTIONS
{
    .vect :
    {
        KEEP(*(.isr_vector))
    } > VECT
    
    .text :
    {
        . = ALIGN(4);
        _text = .;
        *startup.o(.text)   
        *(.text*)
        *(.glue_7t) *(.glue_7)                           
        *(.rodata*)
        _text_end = .;
    } > FLASH

    .data : AT (ADDR(.text) + SIZEOF(.text))
    {
        _data = .;
        *(vtable)
        *(.data*)
        _data_end = .;
    } > SRAM

    .bss :
    {
        _bss = .;
        *(.bss*)
        *(COMMON)
        _bss_end = .;
        . = ALIGN(4);
    } > SRAM

}

