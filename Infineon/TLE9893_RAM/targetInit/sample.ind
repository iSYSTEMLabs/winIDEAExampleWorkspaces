INPUT(& &)
ENTRY(Reset)

MEMORY
{
  BOOTROM (rx)       : ORIGIN = 0x00000000, LENGTH = 32k 
  SRAM_VECT (rwx)    : ORIGIN = 0x18000000, LENGTH = 200 
	SRAM_CODE (rwx)  : ORIGIN = 0x18000100, LENGTH = 7800    /* Lets avoid writing to last page as there are bytes that can lock SWD access. */
  SRAM_DATA (rwx)    : ORIGIN = 0x18002000, LENGTH = 4k
}

_estack = (ORIGIN(SRAM_DATA) + LENGTH(SRAM_DATA) - 4) & 0xFFFFFFFC;
_VTOR   =  ORIGIN(SRAM_VECT);      /* Must be aligned to 64 bits */

SECTIONS
{
    .vect :
    {
        KEEP(*(.isr_vector))
    } > SRAM_VECT
    
    .text :
    {
        . = ALIGN(4);
        *(.text*)
        *(.glue_7t) *(.glue_7)
        *(.rodata*)
        *(.eh*)
        _etext = .;
    } > SRAM_CODE

    .data : AT (ADDR(.text) + SIZEOF(.text))
    {
        
        _data = .;
        *(vtable)
        *(.data*)
        _edata = .;
    } > SRAM_DATA

    .bss :
    {
      
      _bss = .;
      *(.bss*)
      *(COMMON)
      _ebss = .;
    } > SRAM_DATA
}
