INPUT(& &)
ENTRY(Reset)

MEMORY
{
  FLASH (rwx)   : ORIGIN = 0x10000800, LENGTH = 19K
  
  FLASH_BOOT (rwx)  : ORIGIN = 0x10000800, LENGTH = 256
  FLASH_USC1 (rwx)  : ORIGIN = 0x10000900, LENGTH = 1K
  FLASH_USC2 (rwx)  : ORIGIN = 0x10000D00, LENGTH = 512
  FLASH_CODE (rwx)  : ORIGIN = 0x10001000, LENGTH = 19K - 256 - 1K - 512
  
  RAM (rwx)     : ORIGIN = 0x20000000, LENGTH = 1K
  RRAM(rw)      : ORIGIN = 0x30000000, LENGTH = 192
  RRRRAM(rw)    : ORIGIN = 0x300000C0, LENGTH = 64   /* ROM Reserved Retentive RAM - do not use */
}

_bootNumSectors   = 1;   /* Valid: 2..8  */
_ucsNumSectors    = 2;   /* 0 (no UCS present) or Start … 8  */
_codeNumSectors   = 5;   /* 1..7  */



_estack = ORIGIN(RAM) + LENGTH(RAM);

SECTIONS
{
  .boot :
  {   
      __BASE__ = .;
      KEEP(*(.flashConfig))
      KEEP(*(.bootEntry))
      KEEP(*(.boot))
  } > FLASH_BOOT
  
  .usc1 :
  {
      . = ALIGN(4);
      *(.usc1*)
      *(.glue_7t) *(.glue_7)
      *(.rodata*)
      *(.eh*)
      _eusc1 = .;
  } > FLASH_USC1
  
  .usc2 :
  {
      . = ALIGN(4);
      *(.usc2*)
      *(.glue_7t) *(.glue_7)
      *(.rodata*)
      *(.eh*)
      _eusc2 = .;
  } > FLASH_USC2
  
  .text :
  {
      . = ALIGN(4);
      *(.text*)
      *(.glue_7t) *(.glue_7)
      *(Lib_*)
      *(.rodata*)
      *(.eh*)
      _etext = .;
  } > FLASH_CODE
  
  .data : AT (ADDR(.text) + SIZEOF(.text))
  {
      _data = .;
      *(vtable)
      *(.data*)
      _edata = .;
  } > RAM

  .bss :
  {
    _bss = .;
    *(.bss*)
    *(COMMON)
    _ebss = .;
  } > RAM
  
  __IMAGE_END__ = _etext;
  __ImageSize__ =  __IMAGE_END__ - __BASE__; 
  PROVIDE (end = .);
}


