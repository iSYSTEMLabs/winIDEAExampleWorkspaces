/*
	This script intializes PCIe for HSSTP and
  initializes 3 sections so that execution from SRAM (0xE6300000) is possible
*/

#define HSSTP_TSSR              0xEA1005C0
#define HSSTP_LAR               0xEA100FB0
#define HSSTP_LSR               0xEA100FB4
#define HSSTP_STPCR             0xEA100504
#define TDBG_DBGREG9            0xE6100040 // KEY Register
#define DBGREG9_S1_M            0x0000A500 // 1st step to allow the access to DBGREG1
#define DBGREG9_S2_M            0x0000A501 // 2nd step to allow the access to DBGREG1
#define TDBG_DBGREG1            0xE6100020 // Debug Function Selection Register
#define MSTPCR3                 0xE6150048 // MSTP Module stop status register 3
#define RMSTPCR3                0xE615011C // Realtime module stop control register 3
#define CPGWPR                  0xE6150900 // CPG Write Protect Register

//#### SELECTION PCIe to use: uncomment only one of the following sections
//## SECTION Use PCIe0
/*
#define PCIEx_PCIEPHYSR         0xFE0007F0 // PCIE0 PHY layer status register
#define PCIEx_PHY_OVERRIDE      0xE65D402C
#define PCIEx_PHY_PIPEINTFACE   0xE65D4014
#define DBGREG1_DMON2EN_PCIEx_M 0x00000400 // mask for enable PCIE port0 trace output
#define CPGWPR_PCIEx_VAL        0x00080020
#define RMSTPCR3_PCIEx_VAL      0xFFF7FFDF
#define MSTPCR3_PCIEx_POOL_MASK 0x00080000
*/
//## SECTION END Use PCIe0

//## SECTION Use PCIe1
#define PCIEx_PCIEPHYSR         0xEE8007F0 // PCIE1 PHY layer status register 
#define PCIEx_PHY_OVERRIDE      0xE65DC02C
#define PCIEx_PHY_PIPEINTFACE   0xE65DC014
#define DBGREG1_DMON2EN_PCIEx_M 0x00000800 // mask for enable PCIE port1 trace output
#define CPGWPR_PCIEx_VAL        0x00040020
#define RMSTPCR3_PCIEx_VAL      0xFFFBFFDF
#define MSTPCR3_PCIEx_POOL_MASK 0x00040000
//## SECTION END Use PCIe1


#define HSSTP_TXC_TBD1_R_CAR    0xEA10054C // Control Output characteristics
#define HSSTP_APCR_R_CAR        0xEA100630 // Aurora PHY Control Register
#define HSSTP_APCR_TISDREN_M    0x00000008 // Tx Driver Enable
#define HSSTP_APSR_R_CAR        0xEA100638 // Aurora PHY Status Register
#define HSSTP_APSR_COSPLOCK_M   0x00000001 // PLL Lock Detect

#define GENERIC_COUNTER         0xE6080000
#define GENERIC_COUNTER_EN      0x00000001

A AXI_0:HSSTP_LAR L 0xC5ACCE55
D AXI_0:HSSTP_LSR L 0x00000001 0xFFFFFFFF 100

//#### SELECTION: HSSTP input stream; uncomment only one of the following lines
A AXI_0:HSSTP_TSSR L 0x00000001   // Select Cortex-R7 TPIU for input
// A HSSTP_TSSR L 0x00000000   // Select CSDBGSS (system) TPIU for input
//#### SELECTION END

  // [Procedure No.0.5]: 
  // Trace problem work around 
  // AD:EA0F0100 = ATCLKCR_CA57
A AXI_0:0xEA0F0FB0 L 0xC5ACCE55
A AXI_0:0xEA0F0100 L 0x00000200
A AXI_0:0xEA0F0100 L 0x00000201

  /*****************************************************************************/
  // PCIE physical unit Initialization. (different for PCIE0/PCIE1 physical unit)
  /*****************************************************************************/
  // Restriction in use:
  // It is prohibited to change DBGREG1 to change the PCIE physical unit selection while STPCR Bit[2] (nRST)is NOT zero.
  // AD: clear STP Control Register
A AXI_0:HSSTP_STPCR L 0x00000000

  // [Procedure No.1]
  // DBE setting for PCIE physical unit selection.
  //   DBGREG9(KEY Register)
  //   Address : 0xE6100040
  //   Write 0x0000A500 to DBGREG9
  //   (1st step to allow the access to DBGREG1)
  //   Write 0x0000A501 to DBGREG9
  //   (2nd step to allow the access to DBGREG1)
  //   DBGREG1(Debug Function Selection Register)
  //   Address : 0xE6100020
  //   Write 0b01 to bit [11:10] to DBGREG1 (for using PCIE0 physical unit)
  //   Write 0b10 to bit [11:10] to DBGREG1 (for using PCIE1 physical unit)

A AXI_0:TDBG_DBGREG9 L DBGREG9_S1_M
A AXI_0:TDBG_DBGREG9 L DBGREG9_S2_M

  
  // [Procedure No.2]: Release MSTP on PCIe physical unit
  // After this PLL on PCIE physical unit started.
  
M AXI_0:TDBG_DBGREG1 L DBGREG1_DMON2EN_PCIEx_M DBGREG1_DMON2EN_PCIEx_M
A AXI_0:CPGWPR L CPGWPR_PCIEx_VAL
A AXI_0:RMSTPCR3 L RMSTPCR3_PCIEx_VAL

    // Poll until 0 (for confirming MSTP release)
D AXI_0:MSTPCR3 L 0x00000000 MSTPCR3_PCIEx_POOL_MASK 100
  // After this PLL on PCIE physical unit started.

  // [Procedure No.3]
  // PCIE1 Link setting
  //   PCIE1 PHY PCIEPHYSR Address : 0xEE8007F0
  //   Poll PCIEPHYSR until 0x00010001
  //   Bit[16] indicates that PCIE physical unit is ready to use.
  //   Bit[0] indicates that the clock from PCIE physical unit to Aurora LINK is locked.
D AXI_0:PCIEx_PCIEPHYSR L 0x00010001 0x00010001 100

  // [Procedure No.4]: PCIEx physical unit setting
  // If the clock frequency of Aurora link does not have to be changed from 125MHz, this item is not necessary
  // [Procedure No.4]
  // PCIE1 physical unit setting
  //   * If the clock frequency of Aurora link does not have to be changed from 125MHz, this item is not necessary.
  //   PCIEx PHY OVERRIDE
  //   Write 1 to Bit[1]
  //   (Later change to PCIEx physical unit register is valid.)
  //   PCIEx PHY PIPEINTFACE
  //   Write 1 to Bit[8]
  //   (The clock frequency is changed from 125MHz(2.5Gbps) to 250MHz(5Gbps))
//#### SELECTION 250MHz: Uncomment following lines for 250MHz 
M AXI_0:PCIEx_PHY_OVERRIDE L 0x00000002 0x00000002
M AXI_0:PCIEx_PHY_PIPEINTFACE L 0x00000100 0x00000100
//#### SELECTION END 250MHz


  // [Procedure No.5]: other PCIE0 PHY settings
  // [R-Car M3-W] only: offset : 0x54C (Write 1 to Bit[5])
//#### SELECTION R-CAR M3W: Uncomment following lines for R-CAR M3W 
M AXI_0:HSSTP_TXC_TBD1_R_CAR L 0x00000020 0x00000020
//#### SELECTION END R-CAR M3W




  // [Procedure No.6]: 
  // PHYENABLE assert(software setting)
  // APCR offset : 0x630 (Write 1 to Bit[3])
M AXI_0:HSSTP_APCR_R_CAR L HSSTP_APCR_TISDREN_M HSSTP_APCR_TISDREN_M

  // [Procedure No.7]: 
  // Poll COSPLLLOCK
  // APSR offset : 0x638  (Poll [0] until 1 (PLL Lock Detection))
D AXI_0:HSSTP_APSR_R_CAR L HSSTP_APSR_COSPLOCK_M HSSTP_APSR_COSPLOCK_M 100

// PCIE for HSSTP is initialized


// Enable SRAM execution

/*
	Initialize section 0:
		Range: 	0x0000 0000 - 0xFFFF FFFF
		Size: 	4G
		Preferences:
				- Execution possible
				- R/W access in both priviliged and user mode
				- Normal memory
				- Shared, Cachable and Bufferable
*/
S RGNR	L 0x0
S DRBAR L 0x0
S DRSR	L 0x3F
S DRACR L 0x30F
S IRACR L 0x30F

/*
	Initialize section 1:
		Range: 	0xE000 0000 - 0xFFFF FFFF
		Size: 	512M
		Preferences:
				- Execution possible
				- R/W access in both priviliged and user mode
				- Sharable device memory
*/
S RGNR	L 0x1
S DRBAR L 0xE0000000
S DRSR	L 0x39
S DRACR L 0x305
S IRACR L 0x305

/*
	Initialize section 2:
		Range: 	0xE630 0000 - 0xE638 0000
		Size: 	512k
		Preferences:
				- Execution possible
				- R/W access in both priviliged and user mode
				- Normal memory
				- Shared, Cachable and Bufferable
*/
S RGNR	L 0x2
S DRBAR L 0xE6300000
S DRSR	L 0x25
S DRACR L 0x30F
S IRACR L 0x30F

/* Enable MPU */
S SCTLR L 0x00C50079

/* R-CAR H3 specific 
	Set RAllocEnable bit (bit 0) in QOSCTRL_RAEN register
 */
//#### SELECTION R-CAR H3: Uncomment following line for R-CAR H3 
//A 0xE67F0018 L 0x00000001
//#### SELECTION END R-CAR H3

// Enable generic counter for SoC Global Time stamp trace source to work
A VIRTUAL:GENERIC_COUNTER L GENERIC_COUNTER_EN