/*===========================================================================*/
/* DIAB Linker Command File: RH850, link program to FLASH                    */
/*===========================================================================*/

zero_start = 0xffff8000;

MEMORY
{
  iROM          : org = 0x00000000,  len = 0x00040000   /* 512k */  /* Start of internal ROM area (iROM) */
  iRAM_PL       : org = 0xFEE00000,  len = 0x00007400   /* 31k  */  /* Start of internal primary local RAM area (iRAM_PL) */
}

SECTIONS
 {
 /* Start of internal ROM area (iROM) */

 /* .intvect                       :>iROM   start of interrupt vector */
 /* .intvect_end  0x065B           :>.       end   of interrupt vector */
	.intvect : {} > iROM
	
	GROUP : {
		/* Take all code from all objects and libraries.	    */

		.text (TEXT)	: {
			*(.text, ".text.*")
			*(.rdata, ".rdata.*")
			*(.rodata, ".rodata.*")
			*(.frame_info)
			*(.j_class_table)
			*(.init)
			*(.fini)
		}
    
    /* constructor and destructor function ptrs                 */
		.ctors ALIGN(4) : { ctordtor.o(.ctors) *(.ctors) }
		.dtors ALIGN(4) : { ctordtor.o(.dtors) *(.dtors) }
    
		.sdata2 (TEXT)	: { *(.sdata2, ".sdata2.*") }   /* small CONST area for some targets */
    
    __DATA_ROM	= .;
	} > iROM

  GROUP : {
		__DATA_RAM	= .;
    .data (DATA) LOAD(__DATA_ROM)	: {
			*(.data) *(.j_pdata)
		}
    __DATA_END	= .;

		/* Allocate uninitialized sections.			    */

		__BSS_START	= .;
		.sbss (BSS)	: { *(.sbss, ".sbss.*") }
		.bss  (BSS)	: { *(.bss, ".bss.*") }
		.tibss (BSS)	: { *(.tibss, ".tibss.*") }
		__BSS_END	= .;

		/* Any remaining space will be used as a heap.		    */

		__HEAP_START	= .;
	} > iRAM_PL
 
__SP_INIT	= ADDR(iRAM_PL)+SIZEOF(iRAM_PL);
__SP_END	= __SP_INIT-0x800;	    /* Stack is 2KB.		    */
__HEAP_END	= __SP_END;		    /* Heap contiguous with stack.  */

/* Some targets use an extra underscore in front of identifiers
 * ------------------------------------------------------------------------ */
___HEAP_START	= __HEAP_START;
___HEAP_END	= __HEAP_END;
___SP_INIT	= __SP_INIT;
___SP_END	= __SP_END;
___BSS_START	= __BSS_START;
___BSS_END	= __BSS_END; 
___DATA_ROM	= __DATA_ROM;
___DATA_RAM	= __DATA_RAM; 
___DATA_END	= __DATA_END; 

 }

/*===========================================================================*/
/*      End of File                                                          */
/*===========================================================================*/
