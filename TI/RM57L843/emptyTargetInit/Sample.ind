INPUT(& &)
ENTRY(Vector)

MEMORY
{
    ROM (rwx)       : ORIGIN = 0x00000000, LENGTH = 128K
    RAM (rwx)       : ORIGIN = 0x08000000, LENGTH = 64K
}

_stack_size_usr = 0x800;
_stack_size_svc = 0x800;
_stack_size_abt = 0x800;
_stack_size_und = 0x800;
_stack_size_irq = 0x800;
_stack_size_fiq = 0x800;

_estack_sys = (ORIGIN(RAM) + LENGTH(RAM) - 4) & 0xFFFFFFFC;
_estack_usr = _estack_sys - 0x800;
_estack_svc = _estack_usr - _stack_size_usr;
_estack_abt = _estack_svc - _stack_size_svc;
_estack_und = _estack_abt - _stack_size_abt;
_estack_irq = _estack_und - _stack_size_und;
_estack_fiq = _estack_irq - _stack_size_irq;

SECTIONS
{       
    .text :
    {
        *(.text.isr_vectors*)
        *(.text*)
        *(.glue_7t) *(.glue_7)
        *(.rodata*)
        *(.eh*)
        _etext = .;
    } > ROM

    .data : AT (ADDR(.text) + SIZEOF(.text))
    {
        _sdata = .;
        *(vtable)
        *(.data*)
        _edata = .;
    } > RAM

    .bss :
    {
        _sbss = .;
        *(.bss*)
        *(COMMON)
        _ebss = .;
    } > RAM
}
